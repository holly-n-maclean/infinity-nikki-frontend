{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marie\\\\Nikki-Project\\\\infinity-nikki-blog\\\\blog-frontend\\\\src\\\\pages\\\\TagPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Axios from 'axios';\nimport TagList from '../components/TagList';\nimport { Link } from 'react-router-dom';\nimport Pagination from '../components/Pagination'; // Import the Pagination component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TagPage() {\n  _s();\n  const {\n    tag\n  } = useParams(); // Get the tag from the URL\n  const [posts, setPosts] = useState([]); // State to hold posts with the specified tag\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    Axios.get(`http://localhost:5000/api/posts/tag/${tag}?page=${currentPage}&limit=5`).then(res => {\n      setPosts(res.data.posts);\n      setTotalPages(res.data.pages);\n    }).catch(err => {\n      console.error('Error fetching posts by tag:', err);\n      setPosts([]);\n    });\n  }, [tag, currentPage]);\n  const getThumbnailFromContent = markdown => {\n    const match = markdown.match(/!\\[.*?\\]\\((.*?)\\)/);\n    return match ? match[1] : 'https://via.placeholder.com/300x200?text=No+Image';\n  };\n  const stripImagesAndMarkdown = markdown => {\n    const noImages = markdown.replace(/!\\[.*?\\]\\(.*?\\)/g, '');\n    return noImages.replace(/[#_*`>]/g, '').substring(0, 160);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-2xl mb-6\",\n      children: [\"Posts tagged with \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-pink-500\",\n        children: [\"#\", tag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        color: '#999'\n      },\n      children: \"No posts found for this tag.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : posts.map(post => {\n      const thumbnail = getThumbnailFromContent(post.content);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row bg-white shadow-sm border border-gray-200 rounded-lg overflow-hidden mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: thumbnail,\n          alt: \"Post thumbnail\",\n          className: \"w-full md:w-52 h-48 object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/${post._id}`,\n            className: \"no-underline text-gray-800 hover:text-blue-600\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mb-3\",\n            children: formatDate(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 mb-4\",\n            children: [stripImagesAndMarkdown(post.content), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TagList, {\n            tags: post.tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/${post._id}`,\n            className: \"inline-block mt-4 px-4 py-2 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 transition\",\n            children: \"Read More \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this);\n    }, /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_s(TagPage, \"O2ChoDohDR4ZoQAvbSiofbXUQJc=\", false, function () {\n  return [useParams];\n});\n_c = TagPage;\nexport default TagPage;\nvar _c;\n$RefreshReg$(_c, \"TagPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Axios","TagList","Link","Pagination","jsxDEV","_jsxDEV","TagPage","_s","tag","posts","setPosts","currentPage","setCurrentPage","totalPages","setTotalPages","get","then","res","data","pages","catch","err","console","error","getThumbnailFromContent","markdown","match","stripImagesAndMarkdown","noImages","replace","substring","formatDate","dateString","Date","toLocaleDateString","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","textAlign","color","map","post","thumbnail","content","src","alt","to","_id","title","createdAt","tags","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/marie/Nikki-Project/infinity-nikki-blog/blog-frontend/src/pages/TagPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'; \r\nimport Axios from 'axios'; \r\nimport TagList from '../components/TagList';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '../components/Pagination'; // Import the Pagination component\r\n\r\n\r\nfunction TagPage() {\r\n    const { tag } = useParams(); // Get the tag from the URL\r\n    const [posts, setPosts] = useState([]); // State to hold posts with the specified tag\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:5000/api/posts/tag/${tag}?page=${currentPage}&limit=5`)\r\n          .then(res => {\r\n            setPosts(res.data.posts);\r\n            setTotalPages(res.data.pages);\r\n          })\r\n          .catch(err => {\r\n            console.error('Error fetching posts by tag:', err);\r\n            setPosts([]);\r\n          });\r\n      }, [tag, currentPage]); \r\n\r\n    const getThumbnailFromContent = (markdown) => {\r\n        const match = markdown.match(/!\\[.*?\\]\\((.*?)\\)/);\r\n        return match ? match[1] : 'https://via.placeholder.com/300x200?text=No+Image';\r\n      };\r\n    \r\n      const stripImagesAndMarkdown = (markdown) => {\r\n        const noImages = markdown.replace(/!\\[.*?\\]\\(.*?\\)/g, '');\r\n        return noImages.replace(/[#_*`>]/g, '').substring(0, 160);\r\n      };\r\n    \r\n      const formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString('en-US', {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric',\r\n        });\r\n      };\r\n\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\r\n      <h1 className=\"text-center text-2xl mb-6\">\r\n        Posts tagged with <span className=\"text-pink-500\">#{tag}</span>\r\n      </h1>\r\n\r\n      {posts.length === 0 ? (\r\n        <p style={{ textAlign: 'center', color: '#999' }}>No posts found for this tag.</p>\r\n      ) : (\r\n        posts.map(post => {\r\n          const thumbnail = getThumbnailFromContent(post.content);\r\n\r\n          return (\r\n            <div key={post._id} className=\"flex flex-col md:flex-row bg-white shadow-sm border border-gray-200 rounded-lg overflow-hidden mb-6\">\r\n            <img\r\n              src={thumbnail}\r\n              alt=\"Post thumbnail\"\r\n              className=\"w-full md:w-52 h-48 object-cover\"\r\n            />\r\n          \r\n            <div className=\"p-4 flex-1\">\r\n              <Link to={`/posts/${post._id}`} className=\"no-underline text-gray-800 hover:text-blue-600\">\r\n                <h2 className=\"text-lg font-semibold mb-2\">{post.title}</h2>\r\n              </Link>\r\n          \r\n              <p className=\"text-sm text-gray-500 mb-3\">\r\n                {formatDate(post.createdAt)}\r\n              </p>\r\n          \r\n              <p className=\"text-gray-700 mb-4\">\r\n                {stripImagesAndMarkdown(post.content)}...\r\n              </p>\r\n          \r\n              <TagList tags={post.tags} />\r\n          \r\n              <Link\r\n                to={`/posts/${post._id}`}\r\n                className=\"inline-block mt-4 px-4 py-2 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 transition\"\r\n              >\r\n                Read More →\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n            \r\n          );\r\n        },\r\n        <Pagination\r\n            currentPage={currentPage}\r\n            totalPages={totalPages}\r\n            onPageChange={setCurrentPage}\r\n            />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}